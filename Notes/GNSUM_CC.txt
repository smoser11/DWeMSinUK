

Excellent.  I want to talk about NSUM estimation using my RDS sample.  The sample is of Domestic Workers in the UK. 
  Please read 'GNSUM/Feehan and Salganik - 2016 - Generalizing the Network Scale-Up Method.pdf'


│ > Thank you.  I want to discuss the comment "...reconsider whether NSUM    │
│   is the appropriate method for                                              │
│     comparing to RDS prevalence estimates in this context."  I do not agree  │
│   but I could be wrong.  From the Feehan and Salganik 2016 (hereafter        │
│   FS16) paper we have the 'modified basic scale up' esimtator (equations 23  │
│   and 24), that only require a sample from the frame population, F.  If we   │
│   perform sensitivity analysis for the adjustmetn factors (e.g. their        │
│   Table 3), isn't NSUM appropriate? 



 > Excellent thank you.  Before you impliment anything I want to make sure I  │
│   understand the NSUM (and related GNSUM, modified, etc. etc.).  First,      │
│   both the basic scale up and the generalized scale up use the frame         │
│   population size, $N_F$, correct?  But it does not use the sample size in   │
│   the scalue up calculations.   Is this correct?   

Excellent. Thank you.  I want to discuss  the files `nsum_adjustment_factors.r` and 
`nsum_results_display.r`  Running both (and producing the objects `sensitivity_results` and `summary_analysis`) the nsum_results_display produce graphs and tables that do not make sense.  For example, this graph shows no change in the estimated size of the hidden population (note there are multiple indicators for membership in the hidden population).

Do not make any edits just yet.  We are just talking and problem solving right now.


OK, at this point we need to 'fork' the sensitivity analysis into two.



 > Further, the inclusion probabilities ($\pi_i$) are important (e.g. for     │
│   their equation 6).  Now, since we have an RDS sample I suggest we use      │
│   various weights produced by the `RDS` package -- properly re-scaled to    │
│   be inclusion probabilities -- in these calculations.  But importatnly, we  │
│   **do not** have visability estimates.  Does this make sense?  


│ > I think the $\pi_i$ need to sum to 1, right?  But generally, yes, you are  │
│   on the right track, especially using the weights (wt.RDS1_*, wt.vh_*,      │
│   wt.SS_*) (with respective population sizes ($N_F$)        

│ > Good.  Next make to use the rescaled bootstrap procedure of e.g. Rust and  │
│   Rao.  There is a CRAN package to do this:                                  │
│   https://cran.r-project.org/web/packages/surveybootstrap/index.html   With  │
│   this, please completely re-write nsum_results_display.r and                │
│   nsum_adjustment_factors.r to correctly perform ROBUST NSUM esimation       │
│   using my RDS sample.


### 20250912CC

> Thank you.  Your Steps are out of order (e.g. Step 1, Step 2, Step 1, Step 
  3, Step 4, Step 5, Step 6).  I think the problem lies in the 'second Step 
  1', which seems to give 0 valid NSUM and 1 valid RDS estimates. CI scenario 
  29 of 30 :  access_to_help , scheme: ss_980k 
  Survey bootstrap CI for access_to_help_rds ...
  Running survey bootstrap for access_to_help_rds with 500 replications...
  Generated 500 bootstrap samples
  Bootstrap completed: 0 valid NSUM estimates, 0 valid RDS estimates
  CI scenario 30 of 30 :  access_to_help , scheme: ss_980k 
  Survey bootstrap CI for access_to_help_rds ...
  Running survey bootstrap for access_to_help_rds with 500 replications...
  Generated 500 bootstrap samples
  Bootstrap completed: 0 valid NSUM estimates, 0 valid RDS estimates
  Enhanced results created with 9240 rows
  Step 3: Creating summary tables...
  Creating robust summary table...
  Creating robust sensitivity analysis table...
  Step 4: Creating visualizations...
  Creating robust NSUM vs RDS comparison plot...
  Creating robust sensitivity analysis plot...
  Creating inclusion probability analysis plot...
  Step 5: Saving results...
  Error saving comparison plot: Discrete values supplied to continuous scale. 
  Sensitivity plot saved successfully
  Inclusion plot saved successfully
  Step 6: Displaying results...



  Error in `scale_y_continuous()`:
  ! Discrete values supplied to continuous scale.
  ℹ Example values: NA, NA, NA, NA, and NA
  Run `rlang::last_trace()` to see where the error occurred.
  ⎿  5-hour limit reached ∙ resets 5pm
     /upgrade to increase your usage limit.



---


  Next, use Apendix D in the Online Apendix (/Users/  │
│   sm38679/Library/CloudStorage/Dropbox/zotero/storage/FT7AR9J6/Feehan\ and\  │
│   Salganik\ -\ 2016\ -\ Online\ appendix D.pdf  ) to perform senisitivity      │
│   analysis that show exactly how estimates will be affected by violations    │
│   of assumptions.      